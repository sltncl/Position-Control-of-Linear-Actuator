% Author: Nicola Saltarelli
% 
% Summary: This script imports data from a CSV file, processes it to extract and reshape the necessary
% information, and generates a boxplot to visualize the distribution of measured position values with
% respect to the target positions.

% Clearing the workspace, command window, and closing all figures
clc;            % Clears the command window
clear all;      % Clears all variables from the workspace
close all;      % Closes all open figure windows

% Import data from the CSV file
data = importfile("./data.csv");

% Convert the data into an array
data_array = table2array(data);

% Extract target positions from the first column of the array
positions = data_array(:, 1);

% Extract calculated position values for each target position
values = data_array(:, 2:end-1);

% Reshape the values into a one-dimensional vector
values_vector = reshape(values.', [], 1);

% Create a vector of labels by repeating target positions for each value
labels = repelem(positions, size(values, 2));

% Create a boxplot to visualize the distribution of position values with respect to target positions
boxplot(values_vector, labels);

% Add a grid to the plot
grid on;

% Set the style of the grid
set(gca, 'GridLineStyle', '-');

% Set the font size of the axes
set(gca, 'FontSize', 13);

% Add a label to the x-axis
xlabel('Target position (cm)');

% Add a label to the y-axis
ylabel('Measured position value (cm)');

% Add a title to the plot
title('Boxplot of Position Values Calculated by Target Position');

%% Functions

function data = importfile(filename, dataLines)
%IMPORTFILE Import data from a text file
%  DATA = IMPORTFILE(FILENAME) reads data from text file FILENAME for
%  the default selection.  Returns the data as a table.
%
%  DATA = IMPORTFILE(FILE, DATALINES) reads data for the specified row
%  interval(s) of text file FILENAME. Specify DATALINES as a positive
%  scalar integer or a N-by-2 array of positive scalar integers for
%  dis-contiguous row intervals.
%
%  Example:
%  data = importfile("./data.csv", [1, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 12-May-2024 11:44:48

% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [1, Inf];
end

% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 102);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["target_position", "VarName2", "VarName3", "VarName4", "VarName5", "VarName6", "VarName7", "VarName8", "VarName9", "VarName10", "VarName11", "VarName12", "VarName13", "VarName14", "VarName15", "VarName16", "VarName17", "VarName18", "VarName19", "VarName20", "VarName21", "VarName22", "VarName23", "VarName24", "VarName25", "VarName26", "VarName27", "VarName28", "VarName29", "VarName30", "VarName31", "VarName32", "VarName33", "VarName34", "VarName35", "VarName36", "VarName37", "VarName38", "VarName39", "VarName40", "VarName41", "VarName42", "VarName43", "VarName44", "VarName45", "VarName46", "VarName47", "VarName48", "VarName49", "VarName50", "VarName51", "VarName52", "VarName53", "VarName54", "VarName55", "VarName56", "VarName57", "VarName58", "VarName59", "VarName60", "VarName61", "VarName62", "VarName63", "VarName64", "VarName65", "VarName66", "VarName67", "VarName68", "VarName69", "VarName70", "VarName71", "VarName72", "VarName73", "VarName74", "VarName75", "VarName76", "VarName77", "VarName78", "VarName79", "VarName80", "VarName81", "VarName82", "VarName83", "VarName84", "VarName85", "VarName86", "VarName87", "VarName88", "VarName89", "VarName90", "VarName91", "VarName92", "VarName93", "VarName94", "VarName95", "VarName96", "VarName97", "VarName98", "VarName99", "VarName100", "VarName101", "std"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
data = readtable(filename, opts);

end
